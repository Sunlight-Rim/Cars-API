{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API with CRUD operations with Users and their Cars.",
    "title": "Cars API",
    "version": "0.1"
  },
  "host": "localhost:1337",
  "paths": {
    "/api/auth/refresh": {
      "post": {
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Create new token from expired and revoke expired.",
        "operationId": "RefreshRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-go-name": "Token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RefreshResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/auth/sessions": {
      "post": {
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "List all user active sessions (refresh tokens).",
        "operationId": "SessionsRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-go-name": "Token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SessionsResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Sign in to user account.",
        "operationId": "SigninRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-go-name": "Email"
                },
                "password": {
                  "type": "string",
                  "x-go-name": "Password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SigninResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Revoke refresh token.",
        "operationId": "SignoutRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-go-name": "Token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SignoutResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/auth/signout-all": {
      "post": {
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Revoke all user refresh tokens.",
        "operationId": "SignoutAllRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-go-name": "Token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SignoutAllResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "description": "Password must be longer than 6 characters and contain at least one special character.",
        "schemes": [
          "http"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user.",
        "operationId": "SignupRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-go-name": "Email"
                },
                "password": {
                  "type": "string",
                  "x-go-name": "Password"
                },
                "phone": {
                  "type": "integer",
                  "format": "uint64",
                  "x-go-name": "Phone"
                },
                "username": {
                  "type": "string",
                  "x-go-name": "Username"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SignupResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/cars": {
      "get": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Cars"
        ],
        "summary": "Get all user cars.",
        "operationId": "GetCarsNull",
        "responses": {
          "200": {
            "$ref": "#/responses/GetCarsResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Cars"
        ],
        "summary": "Update car data.",
        "operationId": "UpdateCarRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "car_id": {
                  "type": "integer",
                  "format": "uint64",
                  "x-go-name": "CarID"
                },
                "color": {
                  "type": "string",
                  "x-go-name": "Color"
                },
                "model": {
                  "type": "string",
                  "x-go-name": "Model"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateCarResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "description": "Plate must be in format of three latin letters, then three digits. For example \"aaa111\".",
        "schemes": [
          "http"
        ],
        "tags": [
          "Cars"
        ],
        "summary": "Create car in user account.",
        "operationId": "CreateCarRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "color": {
                  "type": "string",
                  "x-go-name": "Color"
                },
                "model": {
                  "type": "string",
                  "x-go-name": "Model"
                },
                "plate": {
                  "type": "string",
                  "x-go-name": "Plate"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateCarResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Cars"
        ],
        "summary": "Delete user car.",
        "operationId": "DeleteCarRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "car_id": {
                  "type": "integer",
                  "format": "uint64",
                  "x-go-name": "CarID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DeleteCarResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user account information.",
        "operationId": "GetMeNull",
        "responses": {
          "200": {
            "$ref": "#/responses/GetMeResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "User"
        ],
        "summary": "Update user general information.",
        "operationId": "UpdateInfoRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "integer",
                  "format": "uint64",
                  "x-go-name": "Phone"
                },
                "username": {
                  "type": "string",
                  "x-go-name": "Username"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateInfoResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "User"
        ],
        "summary": "Delete user account.",
        "operationId": "DeleteUserNull",
        "responses": {
          "200": {
            "$ref": "#/responses/DeleteUserResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/user/password": {
      "put": {
        "security": [
          {
            "accessToken": [
              "[]"
            ]
          }
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "User"
        ],
        "summary": "Change user password.",
        "operationId": "UpdatePasswordRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "new_password": {
                  "type": "string",
                  "x-go-name": "NewPassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdatePasswordResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/errors": {
      "get": {
        "schemes": [
          "https"
        ],
        "tags": [
          "Errors"
        ],
        "summary": "List of API errors.",
        "operationId": "null",
        "responses": {
          "200": {
            "$ref": "#/responses/ErrorsListResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/health": {
      "get": {
        "schemes": [
          "https"
        ],
        "tags": [
          "Health"
        ],
        "summary": "Health check.",
        "operationId": "null",
        "responses": {
          "200": {
            "description": "string",
            "schema": {
              "$ref": "#/definitions/string"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Car": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "x-go-name": "Color"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ID"
        },
        "model": {
          "type": "string",
          "x-go-name": "Model"
        },
        "plate": {
          "type": "string",
          "x-go-name": "Plate"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "CreateCar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "DeleteCar": {
      "type": "object",
      "properties": {
        "car": {
          "$ref": "#/definitions/Car"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "DeleteUser": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "ErrorResponse": {
      "type": "object",
      "title": "General error response struct.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Code"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "GetCars": {
      "type": "object",
      "properties": {
        "cars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Car"
          },
          "x-go-name": "Cars"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "GetMe": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "Refresh": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "Sessions": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Tokens"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "Signin": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "Signout": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "SignoutAll": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Tokens"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "Signup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "UpdateCar": {
      "type": "object",
      "properties": {
        "car": {
          "$ref": "#/definitions/Car"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "UpdateInfo": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ID"
        },
        "phone": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Phone"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "cars/internal/adapters/primary/rest/response"
    }
  },
  "responses": {
    "CreateCarResponse": {
      "description": "Returns ID of new car.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/CreateCar"
          }
        }
      }
    },
    "DeleteCarResponse": {
      "description": "Returns deleted car.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/DeleteCar"
          }
        }
      }
    },
    "DeleteUserResponse": {
      "description": "Returns user deleted account data.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/DeleteUser"
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "General errors model. Response field is null.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "response": {
            "x-go-name": "Response",
            "example": "null"
          }
        }
      }
    },
    "ErrorsListResponse": {
      "description": "A list of errors containing error codes and text descriptions.",
      "schema": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "x-go-name": "Language"
              }
            },
            "x-go-name": "Response"
          }
        }
      }
    },
    "GetCarsResponse": {
      "description": "Returns user cars.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/GetCars"
          }
        }
      }
    },
    "GetMeResponse": {
      "description": "Returns user account data.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/GetMe"
          }
        }
      }
    },
    "RefreshResponse": {
      "description": "Returns new token.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/Refresh"
          }
        }
      }
    },
    "SessionsResponse": {
      "description": "Returns active tokens.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/Sessions"
          }
        }
      }
    },
    "SigninResponse": {
      "description": "Returns token.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/Signin"
          }
        }
      }
    },
    "SignoutAllResponse": {
      "description": "Returns revoked tokens.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/SignoutAll"
          }
        }
      }
    },
    "SignoutResponse": {
      "description": "Returns requested token.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/Signout"
          }
        }
      }
    },
    "SignupResponse": {
      "description": "Returns user ID.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/Signup"
          }
        }
      }
    },
    "UpdateCarResponse": {
      "description": "Returns updated car.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/UpdateCar"
          }
        }
      }
    },
    "UpdateInfoResponse": {
      "description": "Returns user updated account data.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "$ref": "#/definitions/UpdateInfo"
          }
        }
      }
    },
    "UpdatePasswordResponse": {
      "description": "Response field is null.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "x-go-name": "Error",
            "example": "null"
          },
          "response": {
            "x-go-name": "Response",
            "example": "null"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "description": "Enter JWT authorization token with `Bearer ` prefix.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}